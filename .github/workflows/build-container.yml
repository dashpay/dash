name: Build container
on:
  workflow_call:
    inputs:
      context:
        description: "Path to use for build context"
        required: true
        type: string
      file:
        description: "Path to Dockerfile"
        required: true
        type: string
      name:
        description: "Container name"
        required: true
        type: string
      runs-on:
        description: "Runner to use"
        required: false
        type: string
        default: "ubuntu-24.04"
    outputs:
      path:
        description: "Path to built container"
        value: ghcr.io/${{ jobs.build.outputs.repo }}/${{ inputs.name }}:${{ jobs.build.outputs.tag }}

jobs:
  build:
    name: Build container
    runs-on: ${{ inputs.runs-on }}
    outputs:
      tag: ${{ steps.prepare.outputs.tag }}
      repo: ${{ steps.prepare.outputs.repo }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Prepare variables
        id: prepare
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "tag=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "repo=${REPO_NAME}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          push: true
          tags: |
            ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:${{ hashFiles(inputs.file) }}
            ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:${{ steps.prepare.outputs.tag }}
            ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:latest
          cache-from: |
            type=registry,ref=ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:${{ hashFiles(inputs.file) }}
            type=registry,ref=ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:${{ steps.prepare.outputs.tag }}
            type=registry,ref=ghcr.io/${{ steps.prepare.outputs.repo }}/${{ inputs.name }}:latest
          cache-to: type=inline
